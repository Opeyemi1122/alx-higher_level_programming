===========================
How to Use 1-my_list.py
===========================
This class: Write a class MyList that inherits from list:
            Public instance method: def print_sorted(self): that prints the list, but sorted (ascending sort)
            You can assume that all the elements of the list will be of type int

Usage
=====
class MyList(list):
    """
    A subclass of list that initializes and sorts the list.

    This class inherits from the built-in list class and adds a method to print
    the list sorted in ascending order.

    Attributes:
        No additional attributes.

    Methods:
        __init__(): Initializes the MyList object by calling the __init__ method
                    of the superclass (list).
        print_sorted(): Prints the list sorted in ascending order.

    Example:
        # Create a MyList object
        my_list = MyList()

        # Append elements to the list
        my_list.append(3)
        my_list.append(1)
        my_list.append(2)

        # Print the original list
        print("Original list:", my_list)

        # Print the sorted list
        my_list.print_sorted()
    """
    def __init__(self):
        """Initialize the MyList object."""
        super().__init__()

    def print_sorted(self):
        """
        Print the list sorted in ascending order.

        Args:
            No arguments.

        Returns:
            No return value.
        """
        print(sorted(self))

# Example usage:
# my_list = MyList()
# my_list.append(1)
# my_list.append(4)
# my_list.append(2)
# my_list.append(3)
# my_list.append(5)
# print(my_list)
# my_list.print_sorted()
# print(my_list)
